name: Docker Build CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron:  '0 12 * * *'
  workflow_dispatch:

env:
  GITHUB_PKG_REPO: "docker.pkg.github.com"
  IMAGE_NAME: "${{ github.repository }}"
  DOCKER_BUILDKIT: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Environment
        run: |
          if [ "$GITHUB_HEAD_REF" != "" ]
          then
            echo "PR時はソースブランチ名がタグ名になります。"
            TAG_NAME=$GITHUB_HEAD_REF
          else
            echo "PR以外の時はベースブランチ名がタグ名になります。"
            TAG_NAME=${GITHUB_REF##*/}
          fi
          echo IMAGE_IDENTITY="${GITHUB_PKG_REPO}/${IMAGE_NAME}/grav:${TAG_NAME}" >> $GITHUB_ENV

      - name: Get Environment
        run: |
          env
    
      - name: Login GitHub Package
        run: |
          echo $GHP_TOKEN | docker login $GITHUB_PKG_REPO -u $GHP_USER --password-stdin
        env:
          GHP_USER: ${{ github.actor }}
          GHP_TOKEN: ${{ github.token }}

      - name: Hadolint the Dockerfile
        run: |
          docker run --rm -i \
            -v $PWD/.hadolint.yaml:/root/.config/hadolint.yaml \
            hadolint/hadolint < Dockerfile

      - name: Build the Docker image
        run: |
          docker build . -f Dockerfile --tag "${IMAGE_IDENTITY}"

      - name: Test the Docker image
        run: |
          docker run --name test -d -p 9000:8080 -v $PWD/.grav/user:/sync/user "${IMAGE_IDENTITY}"
          MAX_RETRY=30
          count=0
          SUCCESS=false
          while [ $count -lt $MAX_RETRY ] && [ "$SUCCESS" == "false" ]
          do
            cat test
            sleep 3
            curl --retry 50 -L --retry-delay 3 --head http://localhost:9000 > test
            cat test | grep "HTTP/1.1 200 OK" && SUCCESS=true
            count=$((++count))
          done
          docker stop test
          docker rm test
          if [ "$SUCCESS" != "true" ]
          then
            echo "failed: ${@}" >&2
            docker logs "${IMAGE_IDENTITY}"
            exit 1
          fi

      - name: Scan image
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${HOME}/.cache:/root/.cache aquasec/trivy:latest --exit-code 0 "${IMAGE_IDENTITY}"
      
      - name: Inspect image
        run: |
          docker inspect "${IMAGE_IDENTITY}"

      - name: Push Github Package
        run: |
          echo "docker push ${IMAGE_IDENTITY}"
          docker push "${IMAGE_IDENTITY}"
